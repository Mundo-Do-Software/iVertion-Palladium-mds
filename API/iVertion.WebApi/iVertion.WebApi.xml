<?xml version="1.0"?>
<doc>
    <assembly>
        <name>iVertion.WebApi</name>
    </assembly>
    <members>
        <member name="T:iVertion.WebApi.Controllers.ArticlesController">
            <summary>
            Articles
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.#ctor(iVertion.Application.Interfaces.IArticleService,iVertion.Application.Interfaces.IArticleHistoryService)">
            <summary>
            Constructor
            </summary>
            <param name="articleService"></param>
            <param name="articleHistoryService"></param>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.GetArticleAsync(iVertion.Domain.FiltersDb.ArticleFilterDb)">
            <summary>
            Returns the articles, paginating them according to the "articleFilterDb" parameters. 
            </summary>
            <param name="articleFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.GetByIdAsync(System.Int32)">
            <summary>
            Returns an article by its Id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.Post(iVertion.Application.DTOs.ArticleDTO)">
            <summary>
            Creates a new article with the properties of "articleDto".
            </summary>
            <param name="articleDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.Put(System.Int32,iVertion.Application.DTOs.ArticleDTO)">
            <summary>
            Updates an article with the properties of "articleDto".
            </summary>
            <param name="id"></param>
            <param name="articleDto"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.ArticlesController.Delete(System.Int32)">
            <summary>
            Deletes an article by its Id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.TokenController">
            <summary>
            Token
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.#ctor(iVertion.Domain.Account.IAuthenticate,Microsoft.Extensions.Configuration.IConfiguration,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser},iVertion.Application.Interfaces.IUserProfileService,iVertion.Application.Interfaces.IRoleProfileService,iVertion.Application.Interfaces.IAdditionalUserRoleService)">
            <summary>
            Contructor.
            </summary>
            <param name="authentication"></param>
            <param name="configuration"></param>
            <param name="userService"></param>
            <param name="userProfileService"></param>
            <param name="roleProfileService"></param>
            <param name="additionalUserRoleService"></param>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.ValidateToken">
            <summary>
            Validate the token
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.TokenController.Login(iVertion.WebApi.Models.LoginModel)">
            <summary>
            Returns a Bearer Token for the user from "userInfo".
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Controllers.UserController">
            <summary>
            User
            </summary>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.#ctor(iVertion.Domain.Account.IAuthenticate,iVertion.Domain.Account.IUserInterface{iVertion.Infra.Data.Identity.ApplicationUser},iVertion.Domain.Account.IRoleInterface{Microsoft.AspNetCore.Identity.IdentityRole},iVertion.Application.Interfaces.IUserProfileService,iVertion.Application.Interfaces.IRoleProfileService,iVertion.Application.Interfaces.IAdditionalUserRoleService,iVertion.Application.Interfaces.ITemporaryUserRoleService)">
            <summary>
            Constructor
            </summary>
            <param name="authentication"></param>
            <param name="userService"></param>
            <param name="roleService"></param>
            <param name="userProfileService"></param>
            <param name="roleProfileService"></param>
            <param name="additionalUserRoleService"></param>
            <param name="temporaryUserRoleService"></param>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.Get">
            <summary>
            Returns a list of users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserByIdAsync(System.String)">
            <summary>
            Returns a user by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.CreateUser(iVertion.WebApi.Models.RegisterModel)">
            <summary>
            Creates a new user from the "userInfo" properties.
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserProfileAsync(iVertion.Domain.FiltersDb.UserProfileFilterDb)">
            <summary>
            Retuns user profile information
            </summary>
            <param name="userProfileFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserProfileByIdAsync(System.Int32)">
            <summary>
            Returns a user profile information
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRolesProfileAsync(System.Int32)">
            <summary>
            Returns a roles of user profile by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddRoleToUserProfileAsync(iVertion.WebApi.Models.RoleFromUserProfileIdModel)">
            <summary>
            Adds a Role to a User Profile by User Profile Id.
            </summary>
            <param name="roleFromUserProfileIdModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveRoleFromUserProfileId(iVertion.WebApi.Models.RoleFromUserProfileIdModel)">
            <summary>
            Removes a Role from a User Profile by the Role name and the User Profile Id.
            </summary>
            <param name="roleFromUserProfileIdModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRoleProfileAsync(iVertion.Domain.FiltersDb.RoleProfileFilterDb)">
            <summary>
            Retuns role information
            </summary>
            <param name="roleProfileFilterDb"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddAddtionalUserRoleAsync(iVertion.WebApi.Models.AdditionalUserRoleModel)">
            <summary>
            Adds an additional role to a user beyond the role profile they belong to.
            </summary>
            <param name="additionalUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveAddtionalUserRoleAsync(iVertion.WebApi.Models.AdditionalUserRoleModel)">
            <summary>
            Remove an additional role to a user beyond the role profile they belong to.
            </summary>
            <param name="additionalUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddTemporaryUserRoleAsync(iVertion.WebApi.Models.TemporaryUserRoleModel)">
            <summary>
            Adds a new temporary user role.
            </summary>
            <param name="temporaryUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetRolesAsync">
            <summary>
            Returns a list of roles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.GetUserRolesAsync(System.String)">
            <summary>
            Returns a list of roles off some username.
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddUserRoleAsync(iVertion.WebApi.Models.UserProfileModel)">
            <summary>
            Creates a new user role profile
            </summary>
            <param name="userProfileModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.AddRole(iVertion.WebApi.Models.RoleModel)">
            <summary>
            Adds a user to a given rule from the "roleModel" properties.
            </summary>
            <param name="roleModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.RemoveRole(System.String,System.String)">
            <summary>
            Removes a user from a given rule from the "role" and "userName".
            </summary>
            <param name="role"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeUserFullName(iVertion.WebApi.Models.EditeUserFullNameModel)">
            <summary>
            Changes a user's full name from the "userFullNameModel" properties.
            </summary>
            <param name="userFullNameModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeMyUserFullName(iVertion.WebApi.Models.EditeMyUserFullNameModel)">
            <summary>
            Changes the authenticated user's full name from the "myUserFullNameModel" properties.
            </summary>
            <param name="myUserFullNameModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.ResetUserPassword(iVertion.WebApi.Models.ResetPasswordModel)">
            <summary>
            Change a user's password from the "passwordModel" properties.
            </summary>
            <param name="passwordModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.ResetMyUserPassword(iVertion.WebApi.Models.ResetMyPasswordModel)">
            <summary>
            Change the authenticated user's password from the "myPasswordModel" properties.
            </summary>
            <param name="myPasswordModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeUserName(iVertion.WebApi.Models.EditUserNameModel)">
            <summary>
            Changes a user's username from the "userNameModel" properties.
            </summary>
            <param name="userNameModel"></param>
            <returns></returns>
        </member>
        <member name="M:iVertion.WebApi.Controllers.UserController.EditeMyUserName(iVertion.WebApi.Models.EditMyUserNameModel)">
            <summary>
            Changes the authenticated user's username from the "myUserNameModel" properties.
            </summary>
            <param name="myUserNameModel"></param>
            <returns></returns>
        </member>
        <member name="T:iVertion.WebApi.Models.AdditionalUserRoleModel">
            <summary>
            This model is the body of users' requests for additional roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AdditionalUserRoleModel.Role">
            <summary>
            A role registered in the Identity roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.AdditionalUserRoleModel.UserName">
            <summary>
            An existing username on Identity.
            </summary>
        </member>
        <member name="T:iVertion.WebApi.Models.TemporaryUserRoleModel">
            <summary>
            This is the model for adding a new temporary user role.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.Role">
            <summary>
            A role registered in the Identity roles.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.UserName">
            <summary>
            An existing username on Identity.
            </summary>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.StartDate">
            <summary>
            The start date of the temporary user role.
            </summary>
            <value></value>
        </member>
        <member name="P:iVertion.WebApi.Models.TemporaryUserRoleModel.ExpirationDate">
            <summary>
            The end date of the temporary user role.
            </summary>
            <value></value>
        </member>
    </members>
</doc>
